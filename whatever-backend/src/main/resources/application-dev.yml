server:
  port: 8888

spring:
  profiles: dev
  redis:
      host: 127.0.0.1
      port: 6379
      lettuce:
        pool:
          max-active:  100 # 连接池最大连接数（使用负值表示没有限制）
          max-idle: 100 # 连接池中的最大空闲连接
          min-idle: 50 # 连接池中的最小空闲连接

  sharding.jdbc.datasource.names=ds0,ds1

  sharding.jdbc.datasource.ds0.type=org.apache.commons.dbcp.BasicDataSource
  sharding.jdbc.datasource.ds0.driver-class-name=com.mysql.jdbc.Driver
  sharding.jdbc.datasource.ds0.url=jdbc:mysql://localhost:3306/ds0
  sharding.jdbc.datasource.ds0.username=root
  sharding.jdbc.datasource.ds0.password=

  sharding.jdbc.datasource.ds1.type=org.apache.commons.dbcp.BasicDataSource
  sharding.jdbc.datasource.ds1.driver-class-name=com.mysql.jdbc.Driver
  sharding.jdbc.datasource.ds1.url=jdbc:mysql://localhost:3306/ds1
  sharding.jdbc.datasource.ds1.username=root
  sharding.jdbc.datasource.ds1.password=

  sharding.jdbc.config.sharding.tables.t_order.actual-data-nodes=ds$->{0..1}.t_order$->{0..1}
  sharding.jdbc.config.sharding.tables.t_order.table-strategy.inline.sharding-column=order_id
  sharding.jdbc.config.sharding.tables.t_order.table-strategy.inline.algorithm-expression=t_order$->{order_id % 2}
  sharding.jdbc.config.sharding.tables.t_order.key-generator.column=order_id
  sharding.jdbc.config.sharding.tables.t_order_item.actual-data-nodes=ds$->{0..1}.t_order_item$->{0..1}
  sharding.jdbc.config.sharding.tables.t_order_item.table-strategy.inline.sharding-column=order_id
  sharding.jdbc.config.sharding.tables.t_order_item.table-strategy.inline.algorithm-expression=t_order_item$->{order_id % 2}
  sharding.jdbc.config.sharding.tables.t_order_item.key-generator.column=order_item_id
  sharding.jdbc.config.sharding.binding-tables=t_order,t_order_item
  sharding.jdbc.config.sharding.broadcast-tables=t_config

  sharding.jdbc.config.sharding.default-database-strategy.inline.sharding-column=user_id
  sharding.jdbc.config.sharding.default-database-strategy.inline.algorithm-expression=ds$->{user_id % 2}

sharding:
  jdbc:
    datasource:
      ds_master:
        type: com.zaxxer.hikari.HikariDataSource
        driverClassName: com.mysql.jdbc.Driver
        jdbc-url: jdbc:mysql://127.0.0.1:3306/whatever?setUnicode=true&characterEncoding=UTF-8&useSSL=true
        username: root
        password: xiang123
      ds_master1:
        type: com.zaxxer.hikari.HikariDataSource
        driverClassName: com.mysql.jdbc.Driver
        jdbc-url: jdbc:mysql://127.0.0.1:3306/whatever?setUnicode=true&characterEncoding=UTF-8&useSSL=true
        username: root
        password: xiang123
      ds_slave_1:
        type: com.zaxxer.hikari.HikariDataSource
        driverClassName: com.mysql.jdbc.Driver
        jdbc-url: jdbc:mysql://127.0.0.1:3306/whatever?setUnicode=true&characterEncoding=UTF-8&useSSL=true
        username: root
        password: xiang123
      ds_slave_2:
        type: com.zaxxer.hikari.HikariDataSource
        driverClassName: com.mysql.jdbc.Driver
        jdbc-url: jdbc:mysql://127.0.0.1:3306/whatever?setUnicode=true&characterEncoding=UTF-8&useSSL=true
        username: root
        password: xiang123
      names: sharding_datasource

    config:
      masterslave:
        config-map:
        master-data-source-name: ds_master
        load-balance-algorithm-type: round_robin
        slave-data-source-names: ds_slave_1,ds_slave_2
        props:
          sql.show: true
      sharding:
        config-map:
        binding-tables:
        tables:
          t_order:
            actual-data-nodes:
            table-strategy:
              inline:
                sharding-column: order_id
                algorithm-expression: t_order$->{order_id % 2}
            key-generator:
              column: order_id
          t_order_item:
            actualDataNodes: ds${0..1}.t_order_item${0..1}
            tableStrategy:
              inline:
                shardingColumn: order_id
                algorithmExpression: t_order_item${order_id % 2}
        default-data-source-name: master



# MyBatis
#mybatis:
#  typeAliasesPackage: me.weix.whatever.entity
#  mapperLocations: classpath:/mybatis/mapper/**/*.xml
# configLocation: classpath:/mybatis-config.xml

mybatis-plus:
  mapper-locations: classpath:mybatis/mapper/**/*.xml
  #实体扫描，多个package用逗号或者分号分隔
  typeAliasesPackage: me.weix.whatever.entity
  typeEnumsPackage: com.baomidou.springboot.entity.enums
  global-config:
    #主键类型  0:"数据库ID自增", 1:"用户输入ID",2:"全局唯一ID (数字类型唯一ID)", 3:"全局唯一ID UUID";
    id-type: 0
    #字段策略 0:"忽略判断",1:"非 NULL 判断"),2:"非空判断"
    field-strategy: 2
    #驼峰下划线转换
    db-column-underline: true
    #刷新mapper 调试神器
    refresh-mapper: true
    #数据库大写下划线转换
    #capital-mode: true
    #序列接口实现类配置
    #key-generator: com.baomidou.springboot.xxx
    #逻辑删除配置（下面3个配置）
    logic-delete-value: 1
    logic-not-delete-value: 0
#    sql-injector: com.baomidou.mybatisplus.mapper.LogicSqlInjector
    #自定义填充策略接口实现
    meta-object-handler: com.baomidou.springboot.xxx
    #自定义SQL注入器
    #sql-injector: com.baomidou.springboot.xxx
  configuration:
    map-underscore-to-camel-case: true
    cache-enabled: false







